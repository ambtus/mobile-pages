- content_for :title do
  = @title
.form
  = form_for @page.becomes(Page) do |f|
    = hidden_field_tag :count, @count
    = label_tag :type, "Type:"
    - ['Collection', 'Series', 'Book', 'Chapter', 'none', 'any'].each do |choice|
      = radio_button_tag :type, choice, @type == choice
      = label_tag "type_#{choice}", choice
    %br
    = label_tag :sort_by, "Sort by:"
    - ['random', 'last_read', 'last_created', 'read_after', 'recently_read','longest', 'shortest' ].each do |choice|
      = radio_button_tag :sort_by, choice, @sort_by == choice
      = label_tag "sort_by_#{choice}", choice.humanize.downcase
    %br
    = label_tag :unread, "Unread:"
    - ['yes', 'no', 'either'].each do |choice|
      = radio_button_tag :unread, choice, @unread == choice
      = label_tag "unread_#{choice}", choice
    %br
    = label_tag :favorite, "Favorite:"
    - ['yes', 'best', 'good', 'bad', 'unfinished', 'any'].each do |choice|
      = radio_button_tag :favorite, choice, @favorite == choice
      = label_tag "favorite_#{choice}", choice
    %br
    = label_tag :size, "Size:"
    - ['short', 'medium', 'long', 'either', 'any'].each do |choice|
      = radio_button_tag :size, choice, @size == choice
      = label_tag "size_#{choice}", choice
    %br
    = render :partial => "pages/create", :locals => {:page => @page, :called_by => "index"}
    %br
    = f.submit "Find", :name => "Find"
    = f.submit "Store", :name => "Store"
    = link_to("Store Multiple", new_part_path)
    - if @pages
      - @pages.each_with_index do |page, index|
        .page{:id => "position_#{index+1}"}
          .parent=link_to page.parent.title, page_path(page.parent) if page.parent
          .title= link_to page.title, page_path(page)
          .views
            = link_to "Rate", rate_path(page)
            = link_to "ePub", download_url_for_page(page, ".epub")
            = link_to "HTML", download_url_for_page(page, ".html")
            = link_to "Text", download_url_for_page(page, ".read") if page.parts.empty?
            = link_to "Original", page.url unless page.url.blank?
          .part_links
            -page.not_hidden_parts[0,5].each_with_index do |part,index|
              ="|" unless index == 0
              = link_to h(part.title), page_path(part)
            -if page.parts.size > 5
              ="|"
              = link_to "More Parts", page_path(page)
          .tags=page.merged_tag_string
          .my_notes=page.my_short_notes
          .notes=simple_format page.short_notes
      = f.submit "Next", :name => "Next"
