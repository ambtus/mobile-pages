.form
  = form_for @page.becomes(Page) do
    .soon
      =render "pages/page_soon"
      =submit_tag "Change"
    .rebuild
      = submit_tag "Rebuild from Raw HTML"
      = submit_tag "Remove Downloads"
      = submit_tag "Update from Parts" if @page.can_have_parts?
      = submit_tag "Rebuild Meta"
      = submit_tag "Update Tag Cache"
    .type
      = submit_tag "Make Single" if @page.parent
      = submit_tag "Uncollect" if @page.can_have_parts?
      = submit_tag "Increase Type" unless @page.type == "Series"
      = submit_tag "Decrease Type" unless @page.type == "Chapter"
      = submit_tag "Increase Position" if @page.position
      = submit_tag "Decrease Position" if @page.position
    .tags
      = submit_tag "Toggle #{Page::OTHERF}"
      = submit_tag "Toggle #{Page::OTHERA}"
      -if @page.wip
        =submit_tag 'Unset WIP'
      -else
        =submit_tag 'Set WIP'
      %br
      -if @page.can_have_parts?
        =submit_tag 'Put all end notes before'
        =submit_tag 'Put all end notes after'
      -if @page.at_end
        =submit_tag 'Put end notes before'
      -else
        =submit_tag 'Put end notes after'
-if @page.parent
  .parent
    Parent:
    = link_to @page.parent.title, page_path(@page.parent)
    (#{@page.parent.type})
    [#{@page.parent.soon_label}]
    -if @page.parent.parent
      of
      =link_to @page.parent.parent.title, page_path(@page.parent.parent)
      [#{@page.parent.parent.soon_label}]
-if @page.previous_part
  .part
    Previous:
    = link_to @page.previous_part.title, page_path(@page.previous_part)
    (#{@page.previous_part.type})
-if @page.next_part
  .part
    Next:
    = link_to @page.next_part.title, page_path(@page.next_part)
    (#{@page.next_part.type})
.page
  .title
    =h @page.title
    (#{@page.type})
  .views
    = render 'pages/links', page: @page
    .content
      = link_to "Refetch", refetch_path(@page)
      = link_to "Add Part", edit_part_path(@page, add: "part") unless @page.has_content?
      = link_to "Add Parent", edit_part_path(@page, add: "parent") if @page.can_have_tags?
      - if @page.parts.blank?
        = link_to "Edit Scrubbed HTML", edit_html_path(@page, format: "scrubbed")
        = link_to "Edit Raw HTML", edit_html_path(@page)
      = link_to "Scrub", scrub_path(@page)
      = link_to "Split", split_path(@page) if @page.has_content?
    .meta
      = link_to "Title", edit_part_path(@page, add: "title")
      = link_to "My Notes", edit_my_note_path(@page)
      = link_to "Notes", edit_note_path(@page)
      = link_to "Scrub Notes", scrub_path(@page, notes: true) unless @page.notes.blank?
      = link_to "End Notes", edit_end_note_path(@page)
      = link_to "Tags", tag_path(@page)
  =render "pages/meta", page: @page
  =render "pages/div_tags", page: @page
  .my_notes=raw @page.formatted_my_notes
  .notes
    =raw @page.medium_notes
    =link_to "full notes", note_path(@page.id) if @page.notes.present? && @page.notes.length > Page::MEDIUM_LENGTH
  .end_notes=raw @page.formatted_end_notes
-unless @page.parts.blank?
  -last = @count + Page::LIMIT
  -#Rails.logger.debug "page parts #{@count} to #{last} of #{@page.parts.size}"
  .parts
    - @page.parts.limit(last)[@count..-1].each_with_index do |part, index|
      .part{:id => "position_#{index+1}"}
        = part.title_prefix
        = link_to h(part.title), page_path(part)
        = link_to "Rate", rate_path(part)
        = link_to "EPUB", download_url_for_page(part, ".epub")
        = link_to "HTML", download_url_for_page(part, ".html")
        = link_to "Text", download_url_for_page(part, ".read") if part.parts.blank?
        = link_to "Original", part.url unless part.url.blank?
        .notes
          %span.meta= render "pages/meta", page: part
          %span.meta= render "pages/span_tags", page: part
          %span.my_notes=part.short_my_notes
          %span.notes=part.short_notes
          %span.end_notes=part.short_end_notes
  .form
    = form_for @page.becomes(Page) do
      = hidden_field_tag :count, @count
      = submit_tag "First Parts" if @count > 0
      = submit_tag "Next Parts" if @page.parts.size > last
      = submit_tag "Next Unread Part" if @page.unread_parts.exists? && @page.unread_parts.first.position > last
      = submit_tag "Middle Parts" if @count > 0 || @page.parts.size > last
      = submit_tag "Previous Parts" if @count > 0
      = submit_tag "Last Parts" if @page.parts.size > last
